--4.12 07/07/08
3524-3198
326 lines less

------STREAMLINED surebert core sb.js
moved sb.element.prototype.getAncestors to its own file
moved sb.element.prototype.clearStyles to its own file
moved sb.element.prototype.copyStyles to its own file
moved sb.element.prototype.disableSelection to its own file


------MAJOR CHANGES to sb.element and sb.nodeList:
now most all sb.element prototypes return the element itself for chaining.  Before only some did this, the only ones that do not are obvious ones like getX, getY, getWidth etc hich all return the values they are getting

sb.element.event returns the element instead of the event = the event is held in this.lastEventAdded and is also pushe dinto the this.addedEvents array
completely rewrote sb.nodeList to automatciallly append prototypes from sb.element to itself so that you can call the same methods on the nodeList and the results are applied to each child.

changed sb.element.prototype.opacity to sb.element.prototype.setOpacity and moved to its own file
moved sb.element.prototype.isDescendentOf to its own file - DOES NOT REUTRN ITSELF LIKE OTHER sb.element.prototypes

moved sb.nodeList.prototype.parents to its own file

removed sb.dom.addPosition - moved code into sb.element.prototype.getPosition got rid of sb.element.prototype.addPositionRel and sb.element.prototype.addPositionMinusScroll instead favoring
new sb.element().getPosition({pos : 'rel'});
new sb.element().getPosition({accountForScrollBar : 1});
dropped sb.element.addPosition();
dropped sb.element.addPositonRelative();
dropped sb.element.addPositionMinusScroll();

dropped sb.dom.addDimensions(el);
and moved functionality to sb.element.prototype.getDimensions() which was previously an alias to it.

removed sb.styles.copy into sb.element.prototype.copyStyles() which is in its own file
removed sb.styles.write into sb.element.prototype.styles() which was not an alias before

sb.element.prototype.setStyle(prop, val);
sb.element.prototype.getStyle(prop);
updated sb.element.prototype.styles(paramsObj); to filter through sb.element.prototype.setStyle which translates when necessary i.e. opacity, camel case, etc
removed sb.css and moved that code to sb.element.prototype.css which was an alias of it and moved it into its own file - use for backward compat

removed sb.dom.remove() just use sb.element.prototype.remove();
removed sb.dom.replace just use sb.element.prototype.replace();
removed sb.dom.toggle
removed sb.dom.txt - just use document.createTextNode
removed sb.external - no longer used

--4.11 05/29/08
MAJOR CHANGE
switched default surebert path to /surebert instead of ../surebert - use var sbBase='../surebert'; to use the old path before including surebert 

--4.10 05/27/08 
------NEW FEATURE
massivley imporved trace debugging for flash player when uploading with sb.uploads.  Now you can see everything that is happending in the background

------NEW FEATURE
updated surebert.swf to get rid of script timeout warning during long uploads

------NEW FEATURE
changed sb.upload to take an eventListeners param object as part of its arguments object instead of defining sb.uploadHandlers statically for the whole application.  This way you can have individual handlers on a per upload bassis, see flashGate.js for notes

------NEW FEATURE
add new onFileCancel eventListener to sb.upload that fires once for each file when canceled so that you can remove progress bars, etc

--4.09b 05/01/08
------BUG FIX fixed bug since last sb.cookies upgrade. we accidentally left sb.cookies.day in which was causing the cookies to not work in ie6

--4.09 03/10/08
------NEW FEATURES
added sb.strings.validate in /strings/validate.js which is the beginning of a string validation module

-------BUG FIX - MAJOR BUG FIX REQUIRES NO RECODING
updated sb.s$ to avoid "too much recursion" error caused by try catch use of sb.infuse on null objects when you tried to call two elements that do not actually exist.  If you had this problem, this will solve your issue. introduced recently

-------CHANGES
changed cookies.js to default to session cookies when there is no expiration set instead of defaulting to one week

--4.08 01/12/08
------ BUG FIX
sb.textBling.addRestoreButton was adding the wrong type of node, now adds a button as intended
fixed reintroduced bug that changed document.title to 'ccccc' when using sb.element.prototype

---- DOC FIX
Changed docs reference of sb.ie6PngFix and sb.iePngFixBg to sb.ie6.pngFix and sb.ie6.pngFixBg as it should have been

---- DOC FIX
Changed reference of sb.uploadHandlers.onStart to sb.uploadHanlders.onOpen as it should have been

--4.07 12/27/07
-------CHANGES
If sb.ajax instance has its data property set to an object after instanitation but before fetch, the data property is serialized into the data string sent when the fetch method is run

------NEW FEATURES
Jim Lindley added sb.element.prototype.highlight

--4.06 - 12/26/07
-------BUG FIX
New sb.consol - resize, clear, hide, capture features were broken in 4.0.3 and have since been fixed.  This would make no difference in production.

--4.05
-------BUG FIX
sb.element.makeDraggable
was using the old stay sb.include('drag.js');  now uses sb.include('drag');

removed reference to sb.dom.hasClassName in sb.drag and changed it to use {sb.element}.hasClassName()

removed fake documentation reference to sb.dom.hasClassName, should have been sb.dom.createNamedElement

--4.04
-------BUG FIX
sb.strings.rgb2hex
String.prototype.rgb2hex was not properly pointing to sb.strings.rgb2hex
removed need for sb.strings.stripWhitespace from sb.strings.rgb2hex

--4.03
------NEW FEATURES
sb.elemnt.resizeTo, added argument param onWidthChanged and onHeightChanged

added sb.element.prototype.s$
allows you to get a selection inside of any super element
e.g. 
var myDiv = s$('#myDiv');
//all the p tags with class red inside myDiv
myDiv.s$('.red');

because of this I removed sb.element.prototype.getElementsByClassName

var comments = s$(entry.getElementsByClassName('comments')[0]);

//is now 
var comments = entry.s$('.comments')[0];

fixed docs for sb.element.prototype = previously refered to methods as sb.element instead of sb.element.prototype

-------CHANGES
sb.element.prototype.getDescendents use {sbElement}.s$('*');

removed sb.dom.className and added the props to sb.element.prototype directly

removed sb.element.prototype.toggleClassName, use has/add remove if you want this

added sb.browser.win back as module - opens window without toolbar, that is resieable and has scrollbars.  Focuses and returns reference to window.

--------BUG FIX
switched sb.effects onEnd so that it stops the effect aand then runs onEnd, this way if the onEnd throws an error, the effect doesn't continue

sb.consol.log now escapes HTML again as it should have.

sb.ie6 now defaults to type text when creating sb.element input that does not have the type specified